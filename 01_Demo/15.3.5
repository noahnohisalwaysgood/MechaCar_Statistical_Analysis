R --version
R --version
R --version
install.packages("tidyverse")
install.packages("jsonlite")
setwd("C:/Users/14255/Desktop/Bootcamp/15. Rstudio")
setwd("C:/Users/14255/Desktop/Bootcamp/15. Rstudio")
setwd("C:/Users/14255/Desktop/Bootcamp/15. Rstudio/01_Demo")
x <- 3
x <- 5
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
?read.csv()
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
install.packages("tidyverse")
install.packages("jsonlite")
setwd("C:/Users/14255/Desktop/Bootcamp/15. Rstudio/01_Demo")
x <- 3
x <- 3
x <- 3
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
hello_world <- function(name, exclaim=true){}
hello_world <- function(name, exclaim=true){if (exclaim == TRUE){ return(paste:"hello", name, "!"))} else {return(paste("hello", name, "!"))}
hello_world <- function(name, exclaim=TRUE){if (exclaim == TRUE){return(paste("hello", name, "!"))} else {return(paste("hello", name, "!"))}
hello_world <- function(name, exclaim=TRUE){if (exclaim == TRUE){return(paste("hello", name, "!"))} else {return(paste("hello", name, "!"))}}
setwd("C:/Users/14255/Desktop/Bootcamp/15. Rstudio/01_Demo")
hello_world <- function(name, exclaim=TRUE){if (exclaim == TRUE){return(paste("hello", name, "!"))} else {return(paste("hello", name, "!"))}}
hello_world <- function(name, exclaim=TRUE){if (exclaim == TRUE){return(paste("hello", name, "!"))} else {return(paste("hello", name, "!"))}}
?read.csv()
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo_table)
library(jsonlite)
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x[3]
View(demo_table)
demo_table[3,"Year"]
> demo_table[3,3]
demo_table[3,3]
demo_table$"Vehicle_Class"
demo_table$"Vehicle_Class"[2]
filter_table <- demo_table2[demo_table2$price > 10000,]
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
filter_table <- demo_table2[demo_table2$price > 20000,]
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
View(filter_table2)
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$price > 10000) & (demo_table2$drive == "4wd"),]
View(filter_table3)
View(filter_table3)
?sample()
View(hello_world)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 3),]
library(tidyverse)
?mutate()
x <-6
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
x <- 0
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
filter_table <- demo_table2[demo_table2$price > 30000,]
filter_table <- demo_table2[demo_table2$price > 20000,]
filter_table <- demo_table2[demo_table2$price > 10000,]
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep')
View(summarize_demo)
View(summarize_demo)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
View(long_table)
long_table <- demo_table3 %>% gather(key="Metric",value="Score",buying_price:popularity)
?spread()
wide_table <- long_table %>% spread(key="Metric",value="Score")
all.equal(demo_table3,wide_table)
View(wide_table)
View(wide_table)
?ggplot()
head(mpg)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
?geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset into ggplot2
plt + geom_col() #plot a bar plot
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") #plot bar plot with labels
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
View(mpg_summary)
View(mpg_summary)
plt + geom_line()
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty)) #import dataset into ggplot2
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive") #add scatter plot with multiple aesthetics
R --version
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() #add boxplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
savehistory("C:/Users/14255/Desktop/Bootcamp/15. Rstudio/01_Demo/15.3.5")
